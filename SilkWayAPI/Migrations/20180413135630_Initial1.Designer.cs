// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SilkwayAPI.Data;

namespace SilkwayAPI.Migrations
{
    [DbContext(typeof(SilkwayAPIContext))]
    [Migration("20180413135630_Initial1")]
    partial class Initial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.0-preview2-30571");

            modelBuilder.Entity("SilkwayAPI.Models.Flight", b =>
                {
                    b.Property<int>("Flightid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Acars_blockintime");

                    b.Property<DateTime?>("Acars_blocktime");

                    b.Property<DateTime?>("Acars_est_blockintime");

                    b.Property<DateTime?>("Acars_takeofftime");

                    b.Property<DateTime?>("Acars_touchdowntime");

                    b.Property<string>("Aircraft_reg");

                    b.Property<string>("Aircraft_type");

                    b.Property<string>("Call_sign_code");

                    b.Property<string>("Call_sign_number");

                    b.Property<DateTime?>("Est_blockintime");

                    b.Property<DateTime?>("Est_blocktime");

                    b.Property<DateTime?>("Est_takeofftime");

                    b.Property<DateTime?>("Est_touchdowntime");

                    b.Property<DateTime?>("Modified_at");

                    b.Property<DateTime?>("Mvt_blockintime");

                    b.Property<DateTime?>("Mvt_blocktime");

                    b.Property<DateTime?>("Mvt_takeofftime");

                    b.Property<DateTime?>("Mvt_touchdowntime");

                    b.Property<string>("Opsstatus");

                    b.Property<string>("Remarks");

                    b.Property<DateTime?>("Revised_arrival");

                    b.Property<DateTime?>("Revised_departure");

                    b.Property<DateTime?>("Sta");

                    b.Property<string>("Status");

                    b.Property<DateTime?>("Std");

                    b.Property<int>("Uid");

                    b.Property<string>("_Apt_arr_actual")
                        .HasColumnName("Apt_arr_actual");

                    b.Property<string>("_Apt_arr_planned")
                        .HasColumnName("Apt_arr_planned");

                    b.Property<string>("_Apt_dep")
                        .HasColumnName("Apt_dep");

                    b.Property<string>("_Crew_compo")
                        .HasColumnName("Crew_compo");

                    b.Property<string>("_Delays")
                        .HasColumnName("Delays");

                    b.Property<string>("_Fuel")
                        .HasColumnName("Fuel");

                    b.HasKey("Flightid");

                    b.ToTable("FlightList");
                });
#pragma warning restore 612, 618
        }
    }
}
